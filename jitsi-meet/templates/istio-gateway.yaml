apiVersion: networking.istio.io/v1beta1
kind: Gateway
metadata:
  name: {{ include "jitsi-meet.name-web" . }}-gw
  namespace: {{ .Values.namespace }}
  labels:
{{ include "jitsi-meet.labels" . | indent 4 }}
spec:
  selector:
    istio: ingressgateway #! use istio default ingress gateway
  servers:
# web node
  - port:
      number: 80
      name: http
      protocol: HTTP
    tls:
      httpsRedirect: true
    hosts:
    - {{ .Values.webHost }}

  - port:
      number: 443
      name: http2
      protocol: HTTPS
    tls:
      mode: SIMPLE
      credentialName: wildcard-tls
    hosts:
    - {{ .Values.webHost }}
# video node
# default settings
    match:
    - port: {{ .Values.jvb.udpport }}
      name: udpvideo
      protocol: UDP
    tls:
      mode: SIMPLE
      credentialName: wildcard-tls
    hosts:
     - {{ .Values.webHost }}

  - port:
      number: {{ .Values.jvb.tcpport }}
      name: tcpvideo
      protocol: TCP
    tls:
      mode: SIMPLE
      credentialName: wildcard-tls
    hosts:
    - {{ .Values.webHost }}
# iterate over replica and assing different ports
{{- $root := . }}
{{- $name := include "jitsi-meet.name-jvb" $root }}
{{- $svcname := printf "%s-svc" $name }}
{{- $tcpoffset := "{{ .Values.jvb.tcpoffset }}" }}
{{- range $index, $nbr := until (.Values.prosody.replicaCount | int) }}
{{- $udpport := printf "%s%s" "{{ (div $root.Values.jvb.baseport 10) }}" (toString $nbr) }}
{{- $tcpport := printf "%s%s" "{{ (add (div $root.Values.jvb.baseport 10) $tcpoffset }}" (toString $nbr) }}
{{- $udpportname := printf "udp-%d" $nbr }}
{{- $tcpportname := printf "tcp-%d" $nbr }}
  - port:
      number: {{ atoi $udpport }}
      name: "$udpportname"
      protocol: UDP
    tls:
      mode: SIMPLE
      credentialName: wildcard-tls
    hosts:
      - {{ $root.Values.webHost }}

  - port:
      number: {{ atoi $tcpport }}
      name: "$tcpportname"
      protocol: TCP
    tls:
      mode: SIMPLE
      credentialName: wildcard-tls
    hosts:
    - {{ $root.Values.webHost }}

{{- end }}
