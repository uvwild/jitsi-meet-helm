# iterate over replica and assing different ports
{{- $root := . }}
{{- $name := include "jitsi-meet.name-jvb" $root }}
{{- $tcpoffset := .Values.jvb.tcpoffset }}
{{- range $index, $nbr := until (.Values.prosody.replicaCount | int) }}
{{- $target := printf "%s-%d" $name $nbr}}
{{- $udpport := printf "%d" (add $root.Values.jvb.udpport $nbr) }}
{{- $tcpport := printf "%d" (add $root.Values.jvb.tcpport $nbr) }}

{{- $udpnodeport := printf "%d" (add $root.Values.jvb.nodeport $nbr) }}
{{- $tcpnodeport := printf "%d" (add $root.Values.jvb.nodeport $tcpoffset $nbr)  }}

{{- $udpportname := printf "udp-%d" $nbr }}
{{- $tcpportname := printf "tcp-%d" $nbr }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $target | quote }}
  namespace: {{ $root.Values.namespace | quote }}
  labels:
{{ include "jitsi-meet.labels" $root | indent 4 }}
  {{- with $root.Values.jvb.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: {{ $root.Values.jvb.service.type }}
  selector:
    app.kubernetes.io/name: {{ $target | quote }}
    app.kubernetes.io/instance: {{ $root.Release.Name }}
    service: {{ $target | quote }}
  {{- if (eq $root.Values.jvb.service.type "NodePort") -}}
   externalTrafficPolicy: Local
  {{- end }}
  sessionAffinity: {{ $root.Values.jvb.service.sessionAffinity }}
  {{- if $root.Values.jvb.service.sessionAffinityConfig }}
  {{- toYaml $root.Values.jvb.service.sessionAffinityConfig }}
  {{- end }}
  ports:
 #---------------------------------------------------
  - port: {{ atoi $tcpport}}
    name: "{{ atoi $tcpport}}"
    {{- if (eq $root.Values.jvb.service.type "NodePort") -}}
    nodePort: {{ atoi $tcpnodeport }}
    {{- end }}
    protocol: TCP
    targetPort: {{ $tcpport }}
 #---------------------------------------------------
  - port: 5555
    name: "tcp-5555"
    protocol: TCP
    targetPort: 5555
 #---------------------------------------------------
  - port: 8080
    name: "tcp-8080"
    protocol: TCP
    targetPort: 8080
 #---------------------------------------------------
  - port: 9090
    name: "http-9090"
    protocol: 
    targetPort: 9090
#---------------------------------------------------
# officially udp is not working so be prepared and think about nginx  
  # - port: {{ atoi $udpport }}
  #   name: "{{ atoi $udpport }}"
  #   nodePort: {{ atoi $udpnodeport }}
  #   protocol: UDP
  #   targetPort: {{ $udpport }}

{{- end }}
