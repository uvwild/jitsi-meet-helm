# iterate over replica and assing different ports
{{- $root := . }}
{{- $name := include "jitsi-meet.name-jvb" $root }}
{{- $tcpoffset := .Values.jvb.tcpoffset }}
{{- range $index, $nbr := until (.Values.prosody.replicaCount | int) }}
{{- $target := printf "%s-%d" $name $nbr}}
{{- $udpport := printf "%d" (add $root.Values.jvb.baseport $nbr) }}
{{- $tcpport := printf "%d" (add $root.Values.jvb.baseport $tcpoffset $nbr) }}
{{- $udpportname := printf "udp-%d" $nbr }}
{{- $tcpportname := printf "%s-%d" "tcp" $nbr }}
apiVersion: v1
kind: Service
metadata:
  name: {{ $target | quote }}
  namespace: {{ $root.Values.namespace | quote }}
  labels:
{{ include "jitsi-meet.labels" $root | indent 4 }}
  {{- with $root.Values.jvb.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: NodePort
  externalTrafficPolicy: Local
  sessionAffinity: {{ $root.Values.jvb.service.sessionAffinity }}
  {{- if $root.Values.jvb.service.sessionAffinityConfig }}
  {{- toYaml $root.Values.jvb.service.sessionAffinityConfig }}
  {{- end }}
  ports: 
  - name: {{ $udpportname }}
    port: {{ atoi $udpport }}
    nodePort: {{ atoi $udpport }}
    protocol: UDP
    targetPort: {{ atoi $udpport }}

  - name: {{ $tcpportname }}
    port: {{ atoi $tcpport}}
    nodePort: {{ atoi $tcpport }}
    protocol: TCP
    targetPort: {{ atoi $tcpport }}
    
  selector:
    app.kubernetes.io/name: {{ $target | quote }}
    app.kubernetes.io/instance: {{ $root.Release.Name }}
    service: {{ $target | quote }}
{{- end }}
