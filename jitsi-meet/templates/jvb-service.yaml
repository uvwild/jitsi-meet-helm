{{- $root := . }}
{{- $name := include "jitsi-meet.name-jvb" $root }}
{{- $tcpoffset := "{{ .Values.jvb.tcpoffset }}" }}
# iterate over replica and assing different ports
{{- range $index, $nbr := until (.Values.prosody.replicaCount | int) }}
{{- $port := printf "%s%s" "{{ (div .Values.jvb.baseport 10) }}" (toString $nbr) }}
{{- $target := printf "%s-%d" $name $nbr}}
apiVersion: v1
kind: Service
metadata:
  name: {{ $target | quote }}
  namespace: {{ $root.Values.namespace | quote }}
  labels:
{{ include "jitsi-meet.labels" $root | indent 4 }}
  {{- with $root.Values.jvb.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  type: NodePort
  externalTrafficPolicy: Local
  sessionAffinity: {{ $root.Values.jvb.service.sessionAffinity }}
  {{- if $root.Values.jvb.service.sessionAffinityConfig }}
  {{- toYaml $root.Values.jvb.service.sessionAffinityConfig }}
  {{- end }}
  ports: 
  - name: udpstream
    port: {{ atoi $port }}
    nodePort: {{ atoi $port }}
    protocol: UDP
    targetPort: {{ atoi  $port }}

  - name: tcpstream
    port:  {{ add (atoi $port) $tcpoffset }}
    nodePort: {{ add (atoi $port) $tcpoffset }}
    protocol: TCP
    targetPort: {{ add (atoi $port) $tcpoffset }}
    
  selector:
    app.kubernetes.io/name: {{ $target | quote }}
    app.kubernetes.io/instance: {{ $root.Release.Name }}
    service: {{ $target | quote }}
{{- end }}