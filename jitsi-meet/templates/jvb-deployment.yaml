{{- $root := . -}}
{{- $name := include "jitsi-meet.name-jvb" $root -}}
{{- range $index, $nbr := until (.Values.prosody.replicaCount | int) }}
{{- $udpport := printf "%d" (add $root.Values.jvb.baseport $nbr) }}
{{- $tcpport := printf "%d" (add $root.Values.jvb.baseport $root.Values.jvb.tcpoffset $nbr) }}
{{- $udpportname := printf "udp-%d" $nbr }}
{{- $tcpportname := printf "tcp-%d" $nbr }}

---
{{- $depName := printf "%s-%d" $name $nbr -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $depName | quote }}
  namespace: {{ $root.Values.namespace | quote }}
  labels:
{{ include "jitsi-meet.labels" $root | indent 4 }}
spec:
  replicas: {{ $root.Values.jvb.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $depName | quote }}
      app.kubernetes.io/instance: {{ $root.Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $depName | quote }}
        app.kubernetes.io/instance: {{ $root.Release.Name }}
    spec:
    {{- with $root.Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ template "jitsi-meet.serviceAccountName" $root }}
      securityContext:
        {{- toYaml $root.Values.jvb.securityContext | nindent 8 }}
      containers:
        - name: {{ $name | quote }}
          image: {{ printf "%s:%s" $root.Values.jvb.image.repository $root.Values.jvb.image.tag | quote }}
          imagePullPolicy: {{ $root.Values.jvb.image.pullPolicy | quote }}
          command: ["/bin/bash"] # this creates the env variables for the streaming ports
          args: ["/entrypoint.sh","/init"]          
          securityContext:
            capabilities:
              add:
                - SYS_RESOURCE
                - NET_ADMIN
          {{- with $root.Values.jvb.podSecurityContext }}
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: BASE_PORT
              value: {{ $root.Values.jvb.baseport | quote }}            
            - name: TCP_OFFSET
              value: {{ $root.Values.jvb.tcpoffset | quote }}            
            - name: PUBLIC_URL
              value: "https://{{ .Values.webHost }}:443"
            - name: PUBLIC_URL_HOST
              value: "{{ .Values.webHost }}:443"
            - name: XMPP_SERVER
              value: {{ include "jitsi-meet.name-prosody" $root }}
            - name: PROSODY_INSTANCE
              value: {{ printf "%d" $nbr | quote }}
            {{- if $root.Values.jicofo.userAuth.enabled }}
            - name: JICOFO_AUTH_USER
              value: {{ $root.Values.jicofo.userAuth.name }}
            - name: JICOFO_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "jitsi-meet.name-jicofo-config" $root }}
                  key: JICOFO_AUTH_PASSWORD
            {{- end }}
            {{- if $root.Values.jvb.userAuth.enabled }}
            - name: JVB_AUTH_USER
              value: {{ $root.Values.jvb.userAuth.name }}
            - name: JVB_AUTH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "jitsi-meet.name-jvb-config" $root }}
                  key: JVB_AUTH_PASSWORD
            {{- end }}
            {{- if $root.Values.jicofo.componentSecret }}
            - name: JICOFO_COMPONENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "jitsi-meet.name-jicofo-config" $root }}
                  key: JICOFO_COMPONENT_SECRET
            {{- end }}
            {{- with $root.Values.jvb.environment }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- with $root.Values.common.environment }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: udpvideo
              containerPort: {{ atoi $udpport }}
              protocol: UDP
            - name: tvpvideo
              containerPort: {{ atoi $tcpport }}
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: "/entrypoint.sh"
              subPath: "entrypoint.sh"
            - name: config
              mountPath: "/defaults/jvb.conf"
              subPath: "jvb.conf"            
            - name: config
              mountPath: "/defaults/logging.properties"
              subPath: "logging.properties"
            - name: config
              mountPath: "/defaults/sip-communicator.properties"
              subPath: "sip-communicator.properties"
          resources:
            {{- toYaml $root.Values.jvb.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ template "jitsi-meet.name-jvb-config" $root }}-cm
      {{- with $root.Values.jvb.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with $root.Values.jvb.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with $root.Values.jvb.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
{{- end }}